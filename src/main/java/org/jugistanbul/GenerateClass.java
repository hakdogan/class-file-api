package org.jugistanbul;

import java.io.IOException;
import java.lang.classfile.ClassFile;
import java.lang.classfile.Opcode;
import java.lang.constant.MethodTypeDesc;
import java.nio.file.Path;

import static java.lang.classfile.ClassFile.ACC_PUBLIC;
import static java.lang.classfile.ClassFile.ACC_STATIC;
import static java.lang.constant.ClassDesc.of;
import static java.lang.constant.ConstantDescs.CD_void;

/**
 * @author hakdogan (huseyin.akdogan@patikaglobal.com)
 * Created on 30.03.2024
 ***/
public class GenerateClass
{
    public static void main(String[] args) throws IOException {

        ClassFile.of().buildTo(Path.of("HelloJEP457.class"), of("HelloJEP457"),
                classBuilder -> classBuilder
                        .withMethodBody("hello", MethodTypeDesc.of(CD_void), ACC_STATIC,
                                codeBuilder -> codeBuilder
                                        .getstatic(of("java.lang.System"), "out", of("java.io.PrintStream"))
                                        .ldc("Hello, this class is generated by Class-File API which is a preview API to provide a standard API for parsing, generating, and transforming Java class files.")
                                        .invokevirtual(of("java.io.PrintStream"),
                                                "println", MethodTypeDesc.of(CD_void, of("java.lang.Object"))).return_())
                        .withMethodBody("main", MethodTypeDesc.of(CD_void, of("java.lang.String").arrayType()),
                                ACC_PUBLIC | ACC_STATIC,
                                codeBuilder -> codeBuilder
                                                .invokeInstruction(Opcode.INVOKESTATIC, of("HelloJEP457"),
                                                        "hello", MethodTypeDesc.of(CD_void), false)
                                                .return_()));
    }
}
